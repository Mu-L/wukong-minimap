# Reference: https://build-cpp.github.io/cmkr/cmake-toml
# to build:
# > cmake -B build
# > cmake --build build --config Release
[project]
name = "wukong-minimap"
cmake-before = """ 
add_compile_options($<$<CXX_COMPILER_ID:MSVC>:/MP>)

# Enable PDB generation in release mode, but without the extra crap that RelWithDebInfo adds
add_compile_options("$<$<CONFIG:Release>:/Zi>")
add_link_options("$<$<CONFIG:Release>:/DEBUG>")
add_link_options("$<$<CONFIG:Release>:/OPT:REF>")
add_link_options("$<$<CONFIG:Release>:/OPT:ICF>")
"""
cmake-after = """
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")

set(ASMJIT_STATIC ON CACHE BOOL "" FORCE)

if ("${CMAKE_BUILD_TYPE}" MATCHES "Release")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MT")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MT")

    # Statically compile runtime
    string(REGEX REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
    string(REGEX REPLACE "/MD" "/MT" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")

    message(NOTICE "Building in Release mode")
endif()

set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

add_subdirectory(vendor/UESDK)
"""

# [target.spdlog]
# type = "static"
# sources = ["vendor/spdlog/src/*.cpp"]
# include-directories = ["vendor/spdlog/include"]
# compile-definitions = ["SPDLOG_COMPILED_LIB"]
# compile-options = ["/utf-8"]
# alias = "spdlog::spdlog"

[target.glm]
type = "static"
sources = ["vendor/glm/glm/**.cpp"]
include-directories = ["vendor/glm"]

[fetch-content.spdlog]
git = "https://github.com/gabime/spdlog"
tag = "7c02e204c92545f869e2f04edaab1f19fe8b19fd"

[fetch-content.bddisasm]
git = "https://github.com/bitdefender/bddisasm"
tag = "70db095765ab2066dd88dfb7bbcc42259ed167c5"

[fetch-content.kananlib]
git = "https://github.com/cursey/kananlib"
tag = "61a04d4219e3cb81b524a6990d3924289982bbf6"

[fetch-content.safetyhook]
git = "https://github.com/praydog/safetyhook"
tag = "4dce6a63268fc0a563f09a4e195b27ad847f9714"
cmake-before = """
set(SAFETYHOOK_FETCH_ZYDIS ON)
"""


[fetch-content.json]
git = "https://github.com/nlohmann/json"
tag = "bc889afb4c5bf1c0d8ee29ef35eaaf4c8bef8a5d"

[fetch-content.tracy]
git = "https://github.com/wolfpld/tracy"
tag = "897aec5b062664d2485f4f9a213715d2e527e0ca"
cmake-before = """
set(TRACY_STATIC ON CACHE BOOL "" FORCE)
set(TRACY_ENABLE OFF CACHE BOOL "" FORCE)
"""

[fetch-content.directxtk]
git = "https://github.com/microsoft/DirectXTK"
tag = "f5026eb34e7053b1aff325d38db107703f394974"
cmake-before = """
set(BUILD_TOOLS OFF CACHE BOOL "" FORCE)
"""
cmake-after = """
if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.35)
    target_compile_options(DirectXTK PRIVATE /Zc:templateScope-)
endif()
"""

[fetch-content.directxtk12]
git = "https://github.com/microsoft/DirectXTK12"
tag = "528801aa6dd8d628c2f756c41a76d300f47de478"
cmake-before = """
set(BUILD_TOOLS OFF CACHE BOOL "" FORCE)
"""
cmake-after = """
if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 19.35)
    target_compile_options(DirectXTK12 PRIVATE /Zc:templateScope-)
endif()
"""

[target.imgui]
type = "static"
sources = ["vendor/imgui/*.cpp"]
include-directories = ["vendor/imgui", "src/uevr-imgui"]
compile-definitions = [
  "IMGUI_USER_CONFIG=\"${CMAKE_CURRENT_SOURCE_DIR}/src/uevr-imgui/uevr_imconfig.hpp\"",
]

[template.ue4template]
type = "shared"
sources = ["src/**.cpp", "src/**.c"]
headers = ["src/**.hpp", "src/**.h"]
include-directories = [
  "shared/",
  "src/",
  "include/",
  "${OPENXR_SOURCE_DIR}/src",
]
compile-options = ["/GS-", "/bigobj", "/EHa", "/MP"]
compile-features = ["cxx_std_23"]
compile-definitions = []
link-libraries = [
  "d3d11",
  "d3d12",
  "spdlog",
  "safetyhook",
  "glm",
  "imgui",
  "nlohmann_json",
  "Version",
  "TracyClient",
  "DirectXTK",
  "DirectXTK12",
]

[template.ue4template.properties]
OUTPUT_NAME = "UEVRBackend"
RUNTIME_OUTPUT_DIRECTORY_RELEASE = "${CMAKE_BINARY_DIR}/bin/${CMKR_TARGET}"
RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO = "${CMAKE_BINARY_DIR}/bin/${CMKR_TARGET}"
LIBRARY_OUTPUT_DIRECTORY_RELEASE = "${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO = "${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
ARCHIVE_OUTPUT_DIRECTORY_RELEASE = "${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"
ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO = "${CMAKE_BINARY_DIR}/lib/${CMKR_TARGET}"

[target.uevr]
type = "ue4template"
link-libraries = ["kananlib", "uesdk"]
